openapi: 3.0.0
info:
  title: Gudang
  description: |-
    Aplikasi sederhana untuk mengontrol data barang
  contact:
    email: fitrah0212@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:7000
    description: Test local computer
  - url: https://test.youtube-like.com
    description: Staging
  - url: https://youtube-like.com
    description: Production
tags:
  - name: produk
    description: Endpoint produk
  - name: komponen
    description: Endpoint komponen
  - name: pemasok
    description: Endpoint pemasok
paths:
  /produk:
    get:
      tags:
        - produk
      summary: Melihat data produk
      description: Melihat data produk (desc)
      operationId: post_produk
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: motor
                        quantity:
                          type: integer
                          example: 25
    post:
      tags:
        - produk
      summary: Mendapatkan token
      description: Mendapatkan token (desc)
      operationId: post-login-user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: motor
                quantity:
                  type: integer
                  example: 25
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: motor
                        quantity:
                          type: integer
                          example: 25
        "401":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: name and quantity is required!
                  data: 
                    type: object
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: produk is already exist!
                  data: 
                    type: object
  /produk/{id}:
    put:
      tags:
        - produk
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: mobil
                quantity:
                  type: integer
                  example: 13
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: motor
                        quantity:
                          type: integer
                          example: 25
        "401":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find produk with id ${id}!
                  data: 
                    type: object
    get:
      tags:
        - produk
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: motor
                        quantity:
                          type: integer
                          example: 25
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find produk with id ${id}!
                  data: 
                    type: object
    delete:
      tags:
        - produk
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: object
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find produk with id ${id}!
                  data: 
                    type: object
  /produk/connect:
    post:
      tags:
        - produk
      summary: Mendapatkan token
      description: Mendapatkan token (desc)
      operationId: post-connect-komponen
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_produk:
                  type: integer
                  example: 3
                id_komponen:
                  type: integer
                  example: 2
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        id_produk:
                          type: integer
                          example: 3
                        id_komponen:
                          type: integer
                          example: 2
        "401":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: id_komponen and id_produk must be a valid id!
                  data: 
                    type: object
        "400":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: already connected!
                  data: 
                    type: object
  
  /komponen:
    get:
      tags:
        - komponen
      summary: Melihat data produk
      description: Melihat data produk (desc)
      operationId: get-komponen
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: ban motor
                        description:
                          type: string
                          example: bisa digunakan untuk motor dan becak
    post:
      tags:
        - komponen
      summary: Mendapatkan token
      description: Mendapatkan token (desc)
      operationId: post-komponen
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ban motor
                description:
                  type: string
                  example: bisa digunakan untuk motor dan becak
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: ban motor
                        description:
                          type: string
                          example: bisa digunakan untuk motor dan becak
  /komponen/{id}:
    put:
      tags:
        - komponen
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ban mobil
                description:
                  type: string
                  example: hanya bisa digunakan untuk mobil
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: ban mobil
                        description:
                          type: string
                          example: hanya bisa digunakan untuk mobil
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find komponen with id ${id_komponen}!
                  data: 
                    type: object
    get:
      tags:
        - komponen
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: ban motor
                        description:
                          type: string
                          example: bisa digunakan untuk motor dan becak
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find komponen with id ${id_komponen}!
                  data: 
                    type: object
    delete:
      tags:
        - komponen
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: object
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find komponen with id ${id_komponen}!
                  data: 
                    type: object
  /pemasok:
    get:
      tags:
        - pemasok
      summary: Melihat data produk
      description: Melihat data produk (desc)
      operationId: get-pemasok
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: motor
                        quantity:
                          type: integer
                          example: 25
    post:
      tags:
        - pemasok
      summary: Mendapatkan token
      description: Mendapatkan token (desc)
      operationId: post-pemasok
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: sabrina
                addres:
                  type: string
                  example: bandung
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: sabrina
                        addres:
                          type: string
                          example: bandung
  /pemasok/{id}:
    put:
      tags:
        - pemasok
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: sabrina
                addres:
                  type: integer
                  example: bandung
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: sabrina
                        addres:
                          type: string
                          example: bandung
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find pemasok with id ${id_pemasok}!
                  data: 
                    type: object
    get:
      tags:
        - pemasok
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: sabrina
                        addres:
                          type: string
                          example: bandung
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find pemasok with id ${id_pemasok}!
                  data: 
                    type: object
    delete:
      tags:
        - pemasok
      summary: Update channel data
      description: Update channel data (desc)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: id of channel
      responses:
        "200":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: object
        "404":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: can't find pemasok with id ${id_pemasok}!
                  data: 
                    type: object
  /pemasok/connect:
    post:
      tags:
        - pemasok
      summary: Mendapatkan token
      description: Mendapatkan token (desc)
      operationId: post-connect-pemasok
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pemasok:
                  type: integer
                  example: 3
                id_komponen:
                  type: integer
                  example: 2
      responses:
        "201":
          description: Success Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: success
                  data: 
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        id_emasok:
                          type: integer
                          example: 3
                        id_komponen:
                          type: integer
                          example: 2
        "401":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: id_komponen and id_pemasok must be a valid id!
                  data: 
                    type: object
        "400":
          description: Error from user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: already connected!
                  data: 
                    type: object
  